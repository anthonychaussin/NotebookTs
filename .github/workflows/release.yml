name: release

on:
  push:
    branches: [master]

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: pkg
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git ls-remote --tags origin ${{ steps.pkg.outputs.version }} | grep -q ${{ steps.pkg.outputs.version }}; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

    outputs:
      tag-exists: ${{ steps.check_tag.outputs.exists }}

  publish:
    needs: release
    if: needs.release.outputs.tag-exists != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Get version again
        id: pkg
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.pkg.outputs.version }}
          git push origin ${{ steps.pkg.outputs.version }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.pkg.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build project
        run: npm run build

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
